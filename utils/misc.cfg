#textdomain wesnoth-The_Earths_Gut

#define TIME_OVER
    [event]
        name=time over
        [message]
            id=Hamel
            message= _ "Oh no, we took much longer than we're expected to."
        [/message]
        [message]
            id=Aiglathing
            message= _ "Dwarves are too slow!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef

#define GO_HERE_RUNES X Y
    [event]
        name=moveto
        [allow_undo]
        [/allow_undo]
        [filter]
            x={X}
            y={Y}
            side=1
            [not]
                id=Hamel
            [/not]
        [/filter]
        [message]
            speaker=unit
            message= _ "I feel this spot has a strong relation to some mystic runes:"
        [/message]
        [message]
            speaker=unit
            message= _ "'PLACE_IMAGE items/gohere.png...'" # wmllint: no spellcheck
        [/message]
        [message]
            speaker=unit
            message= _ "...followed by some numbers."
        [/message]
        [message]
            id=Aiglathing
            message= _ "What in the world could that possibly mean?"
        [/message]
        [message]
            id=Hamel
            # po: "higher power" was "superior force" originally, but I think this phrasing is more idiomatic:
            message= _ "Maybe a hint from a higher power?"
        [/message]
    [/event]
#enddef

#define REGEN_RING ID_STRING NAME_STRING SILENT
    [object]
        [filter]
            id={ID_STRING}
        [/filter]
        image="items/ring-silver.png"
        name= _ "Ring of Regeneration"
        # po: leading space is intentional; string is spliced on after NAME_STRING:
        description={NAME_STRING}+_" now heals 8 hitpoints per turn."
        [effect]
            apply_to=new_ability
            [abilities]
                {ABILITY_REGENERATES}
            [/abilities]
        [/effect]
        silent={SILENT}
    [/object]
    [store_unit]
        variable=u_Unit
        [filter]
            id={ID_STRING}
        [/filter]
    [/store_unit]
    [unit_overlay]
        x,y=$u_Unit.x,$u_Unit.y
        image="overlays/silver-ring-icon.png"
    [/unit_overlay]
    {CLEAR_VARIABLE u_Unit}
#enddef
#define REMOVE_REGEN_RING ID_STRING
    [object]
        [filter]
            id={ID_STRING}
        [/filter]
        silent=true
        [effect]
            apply_to=remove_ability
            [abilities]
                {ABILITY_REGENERATES}
            [/abilities]
        [/effect]
    [/object]
    [store_unit]
        variable=u_Unit
        [filter]
            id={ID_STRING}
        [/filter]
    [/store_unit]
    [remove_unit_overlay]
        x,y=$u_Unit.x,$u_Unit.y
        image="overlays/silver-ring-icon.png"
    [/remove_unit_overlay]
    {CLEAR_VARIABLE u_Unit}
#enddef
#define REGEN_RING_TO_DULATUS REASON
    #This macro is here, because it's used in two (parallel) scenarios.
    #give the ring of regeneration to Dulatus, if it isn't stored (by Dulatus), and if he hasn't it already
    [if]
        [variable]
            name=b_RingStored
            boolean_equals=false
        [/variable]
        [variable]
            name=s_RegenRingUnit
            not_equals=Dulatus
        [/variable]
        [then]
            [store_unit]
                [filter]
                    id=$s_RegenRingUnit
                [/filter]
                variable=unit_RegenRingUnit
            [/store_unit]
            [if]
                #The unit carrying the ring might have been killed...
                [variable]
                    name=unit_RegenRingUnit.length
                    greater_than=0
                [/variable]
                [then]
                    [message]
                        id=Dulatus
                        message= _ "$unit_RegenRingUnit.name|?"
                    [/message]
                    #If it is Hamel or Aiglathing, nothing happens.
                    [if]
                        [have_unit]
                            id=$s_RegenRingUnit
                        [/have_unit]
                        [then]
                        [/then]
                        [else]
                            [recall]
                                id=$s_RegenRingUnit
                            [/recall]
                        [/else]
                    [/if]
                    [message]
                        id=$s_RegenRingUnit
                        message= _ "Yes?"
                    [/message]
                    [message]
                        id=Dulatus
                        message= _ "Please give me the ring we've acquired in the fight at our east gate."
                    [/message]
                    [message]
                        id=$s_RegenRingUnit
                        message= _ "Why?"
                    [/message]
                    [message]
                        id=Dulatus
                        message={REASON}
                    [/message]
                    [message]
                        id=$s_RegenRingUnit
                        message= _ "..."
                    [/message]
                    [message]
                        id=Aiglathing
                        message= _ "Not in the first row... that's okay."
                    [/message]
                    [message]
                        id=Hamel
                        message= _ "I suppose it's best if you take it, Dulatus."
                    [/message]
                    {REMOVE_REGEN_RING $s_RegenRingUnit}
                    [message]
                        id=$s_RegenRingUnit
                        message= _ "Here you go."
                    [/message]
                    {REGEN_RING Dulatus "Dulatus" no}
                    {VARIABLE s_RegenRingUnit Dulatus}
                    [message]
                        id=Dulatus
                        message= _ "Thanks."
                    [/message]
                [/then]
            [/if]
            {CLEAR_VARIABLE unit_RegenRingUnit}
        [/then]
    [/if]
#enddef

#define TOGGLE_FOG SIDE TURN_NUMBER OFF_TIME ON_TIME
    [event]
        name=new turn
        first_time_only=no
        [set_variable]
            name=int_Turns_mod_6
            value={TURN_NUMBER}
        [/set_variable]
        [set_variable]
            name=int_Turns_mod_6
            modulo=6
        [/set_variable]
        [if]
            [variable]
                name=int_Turns_mod_6
                numerical_equals={OFF_TIME}
            [/variable]
            [then]
                [modify_side]
                    side={SIDE}
                    fog=no
                [/modify_side]
            [/then]
        [/if]
        [if]
            [variable]
                name=int_Turns_mod_6
                numerical_equals={ON_TIME}
            [/variable]
            [then]
                [modify_side]
                    side={SIDE}
                    fog=yes
                [/modify_side]
            [/then]
        [/if]
        [clear_variable]
            name=int_Turns_mod_6
        [/clear_variable]
    [/event]
#enddef

#define VARIABLE_DIFFICULTY_DEPENDANT VARIABLE_NAME EASY_VALUE NORMAL_VALUE HARD_VALUE
#ifdef EASY
    [set_variable]
        name={VARIABLE_NAME}
        value={EASY_VALUE}
    [/set_variable]
#endif
#ifdef NORMAL
    [set_variable]
        name={VARIABLE_NAME}
        value={NORMAL_VALUE}
    [/set_variable]
#endif
#ifdef HARD
    [set_variable]
        name={VARIABLE_NAME}
        value={HARD_VALUE}
    [/set_variable]
#endif
#enddef

#define HERO_DEATHS_OBJECTIVE_LOSSES
    [objective]
        description=_ "Death of Hamel"
        condition=lose
    [/objective]
    [objective]
        description=_ "Death of Dulatus"
        condition=lose
    [/objective]
    [objective]
        description=_ "Death of Aiglathing"
        condition=lose
    [/objective]
#enddef
#define HOW_TO_LOSE_2
    [objective]
        description=_"Death of Hamel"
        condition=lose
    [/objective]
    [objective]
        description=_"Death of Aiglathing"
        condition=lose
    [/objective]
    {TURNS_RUN_OUT}
#enddef

#define TEG_LIMIT_CONTEMPORANEOUS_RECRUITS_DIFFICULTY_DEPENDANT SIDE TYPE LIMIT_EASY LIMIT_NORMAL LIMIT_HARD
#ifdef EASY
    {LIMIT_CONTEMPORANEOUS_RECRUITS {SIDE} ({TYPE}) {LIMIT_EASY}}
#endif
#ifdef NORMAL
    {LIMIT_CONTEMPORANEOUS_RECRUITS {SIDE} ({TYPE}) {LIMIT_NORMAL}}
#endif
#ifdef HARD
    {LIMIT_CONTEMPORANEOUS_RECRUITS {SIDE} ({TYPE}) {LIMIT_HARD}}
#endif
#enddef

#define TIME_OVER_DULATUS_SCENARIOS
    [event]
        name=time over
        [role]
            type=Troll Whelp,Apprentice Shaman,Troll,Troll Rocklobber,TEG Troll Shaman,Troll Warrior
            side=1
            role=r_Speaker
            [not]
                id=Krolock
            [/not]
        [/role]
        [message]
            role=r_Speaker
            message= _ "No! We took too long!"
        [/message]
        [message]
            id=Dulatus
            message= _ "Time is over, dwarves are just too slow!"
        [/message]
        [endlevel]
            result=defeat
        [/endlevel]
    [/event]
#enddef

#define GENERAL_BONUS_VIA_GOLD FILTER AMOUNT
    [event]
        name=die
        [filter]
            {FILTER}
        [/filter]
        [filter_second]
            side=1
        [/filter_second]
        {VARIABLE i_Gold {AMOUNT}}
        [gold]
            side=1
            amount=$i_Gold
        [/gold]
        [sound]
            name=gold.ogg
        [/sound]
        [message]
            speaker=narrator
            image="wesnoth-icon.png"
            message= _ "You receive $i_Gold| gold pieces!"
        [/message]
        {CLEAR_VARIABLE i_Gold}
    [/event]
#enddef

#define TEG_EARTHQUAKE
    {QUAKE "rumble.ogg"}
#enddef

#define LAVA_UNDERGROUND
    [time]
        id=lava_underground
        name= _ "lava twilight"
        image=misc/time-schedules/schedule-underground.png
        #It seems that color adjustment does not work if it is only a time area.
        red=10
        green=-10
        blue=-10
    [/time]
#enddef

#define RECRUIT EASY NORMAL HARD
#ifdef EASY
    recruit={EASY}
#endif
#ifdef NORMAL
    recruit={NORMAL}
#endif
#ifdef HARD
    recruit={HARD}
#endif
#enddef
#define RANDOM_ARRAY_INDEX ARRAY INDEX_VARIABLE_NAME
    #randomly chooses an index for an array
    #does not check if array.length>0
    [set_variable]
        name={INDEX_VARIABLE_NAME}
        rand=1..${ARRAY}.length
    [/set_variable]
    {VARIABLE_OP {INDEX_VARIABLE_NAME} add -1}
#enddef

#define SCENARIO_REMOVE_SHROUD FILTER
    [store_locations]
        variable=loc_RemoveShroud
        {FILTER}
    [/store_locations]
    {FOREACH loc_RemoveShroud i_CurrentHex}
        [remove_shroud]
            side=1
            x=$loc_RemoveShroud[$i_CurrentHex].x
            y=$loc_RemoveShroud[$i_CurrentHex].y
        [/remove_shroud]
    {NEXT i_CurrentHex}
    {CLEAR_VARIABLE loc_RemoveShroud}
#enddef

#define TEG_END_SCENARIO_VIA_RIGHTCLICK GOLD_CARRYOVER
    [message]
        speaker=narrator
        image=wesnoth-icon.png
        message=_"You may end the scenario at any time via the right-click menu from now on."
    [/message]
    [set_menu_item]
        id=end_scenario
        description=_"End the scenario."
        [show_if]
        [/show_if]
        [command]
            [clear_menu_item]
                id=end_scenario
            [/clear_menu_item]
            [endlevel]
                result=victory
                bonus=no
                {NEW_GOLD_CARRYOVER {GOLD_CARRYOVER}}
            [/endlevel]
        [/command]
    [/set_menu_item]
#enddef
